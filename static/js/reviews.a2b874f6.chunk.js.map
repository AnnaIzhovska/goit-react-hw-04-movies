{"version":3,"sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.js"],"names":["module","exports","Reviews","movieId","useParams","useState","review","setReviews","useEffect","a","fetchMovieReviews","reviews","console","log","length","Error","notFoundToast","onFetchMovies","className","s","list","map","id","author","content","item","authorName"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,WAAa,4BAA4B,QAAU,2B,4KCKhH,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA6BE,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,qBAAU,WAAM,4CACd,WAA6BL,GAA7B,eAAAM,EAAA,+EAE0BC,YAAkBP,GAF5C,UAEUQ,EAFV,OAGIC,QAAQC,IAAIF,GAEW,IAAnBA,EAAQG,OALhB,sBAMY,IAAIC,MANhB,OASIR,EAAWI,GATf,kDAWIK,cAXJ,2DADc,uBAAC,SAAD,2BAedC,CAAcd,KACb,CAACA,IAGF,8BACGG,EAAOQ,OAAS,EACf,mCACE,oBAAII,UAAWC,IAAEC,KAAjB,SACGd,GACCA,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,qBAAaN,UAAWC,IAAEM,KAA1B,UACE,mBAAGP,UAAWC,IAAEO,WAAhB,SAA6BH,IAC7B,mBAAGL,UAAWC,IAAEK,QAAhB,SAA0BA,MAFnBF,UAQjB","file":"static/js/reviews.a2b874f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Reviews_list__378OD\",\"item\":\"Reviews_item__1zZIF\",\"authorName\":\"Reviews_authorName__Bqz4g\",\"content\":\"Reviews_content__OwUsB\"};","import { useParams } from 'react-router'\r\nimport { useState, useEffect } from 'react'\r\nimport { fetchMovieReviews } from '../../services/moviesApi'\r\nimport { notFoundToast } from '../OnToastError'\r\nimport s from './Reviews.module.css'\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams()\r\n  const [review, setReviews] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function onFetchMovies(movieId) {\r\n      try {\r\n        const reviews = await fetchMovieReviews(movieId)\r\n        console.log(reviews)\r\n\r\n        if (reviews.length === 0) {\r\n          throw new Error()\r\n        }\r\n\r\n        setReviews(reviews)\r\n      } catch (error) {\r\n        notFoundToast()\r\n      }\r\n    }\r\n    onFetchMovies(movieId)\r\n  }, [movieId])\r\n\r\n  return (\r\n    <div>\r\n      {review.length > 0 ? (\r\n        <>\r\n          <ul className={s.list}>\r\n            {review &&\r\n              review.map(({ id, author, content }) => (\r\n                <li key={id} className={s.item}>\r\n                  <p className={s.authorName}>{author}</p>\r\n                  <p className={s.content}>{content}</p>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <p>No Reviews</p>\r\n      )}\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}