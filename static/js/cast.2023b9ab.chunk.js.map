{"version":3,"sources":["components/Cast/Cast.module.css","components/Cast/Cast.js"],"names":["module","exports","Cast","movieId","useParams","useState","cast","setCast","useEffect","a","fetchMovieCredits","casts","console","log","length","Error","notFoundToast","onFetchMovies","className","s","list","map","id","profile_path","name","character","item","photo","src","noAvatar","alt"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY,0B,oLCMzH,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,qBAAU,WAAM,4CACd,WAA6BL,GAA7B,eAAAM,EAAA,+EAEwBC,YAAkBP,GAF1C,UAEUQ,EAFV,OAGIC,QAAQC,IAAIF,GAES,IAAjBA,EAAMG,OALd,sBAMY,IAAIC,MANhB,OASIR,EAAQI,GATZ,kDAWIK,cAXJ,2DADc,uBAAC,SAAD,2BAedC,CAAcd,KACb,CAACA,IAGF,oBAAIe,UAAWC,IAAEC,KAAjB,SACGd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,qBAAaP,UAAWC,IAAEO,KAA1B,UACE,qBACER,UAAWC,IAAEQ,MACbC,IACEL,EAAY,0CAC2BA,GACnCM,IAENC,IAAI,UAEN,mBAAGZ,UAAWC,IAAEK,KAAhB,SAAuBA,IACvB,mBAAGN,UAAWC,IAAEM,UAAhB,SAA4BA,GAAa,cAXlCH","file":"static/js/cast.2023b9ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cast_list__2sbMq\",\"item\":\"Cast_item__2m5II\",\"photo\":\"Cast_photo__1WqXG\",\"name\":\"Cast_name__2g03G\",\"character\":\"Cast_character__-cPKF\"};","import { useParams } from 'react-router'\r\nimport { useState, useEffect } from 'react'\r\nimport { fetchMovieCredits } from '../../services/moviesApi'\r\nimport noAvatar from '../../images/default.jpg'\r\nimport s from './Cast.module.css'\r\nimport { notFoundToast } from '../OnToastError'\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams()\r\n  const [cast, setCast] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function onFetchMovies(movieId) {\r\n      try {\r\n        const casts = await fetchMovieCredits(movieId)\r\n        console.log(casts)\r\n\r\n        if (casts.length === 0) {\r\n          throw new Error()\r\n        }\r\n\r\n        setCast(casts)\r\n      } catch (error) {\r\n        notFoundToast()\r\n      }\r\n    }\r\n    onFetchMovies(movieId)\r\n  }, [movieId])\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {cast.map(({ id, profile_path, name, character }) => (\r\n        <li key={id} className={s.item}>\r\n          <img\r\n            className={s.photo}\r\n            src={\r\n              profile_path\r\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                : noAvatar\r\n            }\r\n            alt=\"actor\"\r\n          />\r\n          <p className={s.name}>{name}</p>\r\n          <p className={s.character}>{character || 'unknown'}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}"],"sourceRoot":""}